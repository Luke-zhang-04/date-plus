{"version":3,"file":"dateplus.js","sources":["../../lib/conversions.js","../../lib/values.js","../../lib/utils.js","../../lib/index.js"],"sourcesContent":["/**\n * DatePlus A simple program to assist with date manipulation\n *\n * @license MIT\n * @version 3.1.0\n * @author Luke Zhang luke-zhang-04.github.io\n * @copyright Copyright (C) 2020 - 2021 Luke Zhang\n */\n/**\n * Converts milliseconds to seconds with remainders\n *\n * @param ms - Milliseconds to convert\n * @returns Object with seconds and milliseconds\n */\nexport const msToSecs = (ms) => ({\n    ms: ms % 1000 /* MsPerSec */,\n    seconds: (ms - (ms % 1000 /* MsPerSec */)) / 1000 /* MsPerSec */,\n});\n/**\n * Converts milliseconds to minutes with remainders\n *\n * @param ms - Milliseconds to convert\n * @returns Object with minutes, seconds, and milliseconds\n */\nexport const msToMins = (ms) => {\n    const milliseconds = (ms % 1000 /* MsPerSec */) % 1000 /* MsPerSec */;\n    const seconds = ((ms - (ms % 1000 /* MsPerSec */)) / 1000 /* MsPerSec */) % 60 /* SecsPerMin */;\n    const minutes = (ms - seconds * 1000 /* MsPerSec */ - milliseconds) / (1000 /* MsPerSec */ * 60 /* SecsPerMin */);\n    return {\n        ms: milliseconds,\n        seconds,\n        minutes,\n    };\n};\n/**\n * Converts milliseconds to hours with remainders\n *\n * @param ms - Milliseconds to convert\n * @returns Object with hours, minutes, seconds, and milliseconds\n */\nexport const msToHrs = (ms) => {\n    const milliseconds = (ms % 1000 /* MsPerSec */) % 1000 /* MsPerSec */;\n    const seconds = ((ms - (ms % 1000 /* MsPerSec */)) / 1000 /* MsPerSec */) % 60 /* SecsPerMin */;\n    const minutes = ((ms - seconds * 1000 /* MsPerSec */ - milliseconds) / (1000 /* MsPerSec */ * 60 /* SecsPerMin */)) %\n        60 /* MinsPerHr */;\n    const hours = (ms -\n        minutes * 1000 /* MsPerSec */ * 60 /* SecsPerMin */ -\n        seconds * 1000 /* MsPerSec */ -\n        milliseconds) /\n        (1000 /* MsPerSec */ * 60 /* SecsPerMin */ * 60 /* MinsPerHr */);\n    return {\n        ms: milliseconds,\n        seconds,\n        minutes,\n        hours,\n    };\n};\n/**\n * Converts milliseconds to days with remainders\n *\n * @param ms - Milliseconds to convert\n * @returns Object with days, hours, minutes, seconds, and milliseconds\n */\nexport const msToDays = (ms) => {\n    const milliseconds = (ms % 1000 /* MsPerSec */) % 1000 /* MsPerSec */;\n    const seconds = ((ms - (ms % 1000 /* MsPerSec */)) / 1000 /* MsPerSec */) % 60 /* SecsPerMin */;\n    const minutes = ((ms - seconds * 1000 /* MsPerSec */ - milliseconds) / (1000 /* MsPerSec */ * 60 /* SecsPerMin */)) %\n        60 /* MinsPerHr */;\n    const hours = ((ms -\n        minutes * 1000 /* MsPerSec */ * 60 /* SecsPerMin */ -\n        seconds * 1000 /* MsPerSec */ -\n        milliseconds) /\n        (1000 /* MsPerSec */ * 60 /* SecsPerMin */ * 60 /* MinsPerHr */)) %\n        24 /* HrsPerDay */;\n    const days = (ms -\n        hours * 1000 /* MsPerSec */ * 60 /* SecsPerMin */ * 60 /* MinsPerHr */ -\n        minutes * 1000 /* MsPerSec */ * 60 /* SecsPerMin */ -\n        seconds * 1000 /* MsPerSec */ -\n        milliseconds) /\n        (1000 /* MsPerSec */ * 60 /* SecsPerMin */ * 60 /* MinsPerHr */ * 24 /* HrsPerDay */);\n    return {\n        ms: milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n    };\n};\n/* eslint-disable max-len */\n/**\n * Converts seconds to milliseconds\n *\n * @param secs - Seconds to convert\n * @returns Converted milliseconds\n */\nexport const secsToMs = (secs) => secs * 1000 /* MsPerSec */;\n/**\n * Converts seconds to minutes with remainders\n *\n * @param secs - Seconds to convert\n * @returns Converted minutes\n */\nexport const secsToMins = (secs) => msToMins(secsToMs(secs));\n/**\n * Converts seconds to hours with remainders\n *\n * @param secs - Seconds to convert\n * @returns Converted hours\n */\nexport const secsToHrs = (secs) => msToHrs(secsToMs(secs));\n/**\n * Converts seconds to days with remainders\n *\n * @param secs - Seconds to convert\n * @returns Converted days\n */\nexport const secsToDays = (secs) => msToDays(secsToMs(secs));\n/**\n * Converts hours to milliseconds\n *\n * @param mins - Minutes to convert\n * @returns Converted milliseconds\n */\nexport const minsToMs = (mins) => mins * 60 /* SecsPerMin */ * 1000 /* MsPerSec */;\n/**\n * Converts hours to seconds\n *\n * @param mins - Minutes to convert\n * @returns Converted seconds\n */\nexport const minsToSecs = (mins) => mins * 60 /* SecsPerMin */;\n/**\n * Converts minutes to hours with remainders\n *\n * @param mins - Minutes to convert\n * @returns Converted hours\n */\nexport const minsToHrs = (mins) => msToHrs(minsToMs(mins));\n/**\n * Converts minutes to days with remainders\n *\n * @param mins - Minutes to convert\n * @returns Converted days\n */\nexport const minsToDays = (mins) => msToDays(minsToMs(mins));\n/**\n * Converts hours to milliseconds\n *\n * @param hours - Hours to convert\n * @returns Converted milliseconds\n */\nexport const hrsToMs = (hours) => hours * 60 /* MinsPerHr */ * 60 /* SecsPerMin */ * 1000 /* MsPerSec */;\n/**\n * Converts hours to seconds\n *\n * @param hours - Hours to convert\n * @returns Converted seconds\n */\nexport const hrsToSecs = (hours) => hours * 60 /* MinsPerHr */ * 60 /* SecsPerMin */;\n/**\n * Converts hours to minutes\n *\n * @param hours - Hours to convert\n * @returns Converted minutes\n */\nexport const hrsToMins = (hours) => hours * 60 /* MinsPerHr */;\n/**\n * Converts hours to days with remainders\n *\n * @param hrs - Hours to convert\n * @returns Converted days\n */\nexport const hrsToDays = (hrs) => msToDays(hrsToMs(hrs));\n/**\n * Converts days to milliseconds\n *\n * @param days - Days to convert\n * @returns Converted milliseconds\n */\nexport const daysToMs = (days) => days * 24 /* HrsPerDay */ * 60 /* MinsPerHr */ * 60 /* SecsPerMin */ * 1000 /* MsPerSec */;\n/**\n * Converts days to seconds\n *\n * @param days - Days to convert\n * @returns Converted seconds\n */\nexport const daysToSecs = (days) => days * 24 /* HrsPerDay */ * 60 /* MinsPerHr */ * 60 /* SecsPerMin */;\n/**\n * Converts days to minutes\n *\n * @param days - Days to convert\n * @returns Converted minutes\n */\nexport const daysToMins = (days) => days * 24 /* HrsPerDay */ * 60 /* MinsPerHr */;\n/**\n * Converts days to hours\n *\n * @param days - Days to convert\n * @returns Converted hours\n */\nexport const daysToHrs = (days) => days * 24 /* HrsPerDay */;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVyc2lvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvY29udmVyc2lvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7R0FPRztBQTZGSDs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxDQUFDLEVBQVUsRUFBYyxFQUFFLENBQUMsQ0FBQztJQUNqRCxFQUFFLEVBQUUsRUFBRSxzQkFBa0I7SUFDeEIsT0FBTyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxzQkFBa0IsQ0FBQyxDQUFDLHNCQUFrQjtDQUMzRCxDQUFDLENBQUE7QUFFRjs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxDQUFDLEVBQVUsRUFBYyxFQUFFO0lBQy9DLE1BQU0sWUFBWSxHQUFHLENBQUMsRUFBRSxzQkFBa0IsQ0FBQyxzQkFBa0IsQ0FBQTtJQUM3RCxNQUFNLE9BQU8sR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxzQkFBa0IsQ0FBQyxDQUFDLHNCQUFrQixDQUFDLHNCQUFvQixDQUFBO0lBQ3JGLE1BQU0sT0FBTyxHQUNULENBQUMsRUFBRSxHQUFHLE9BQU8sc0JBQWtCLEdBQUcsWUFBWSxDQUFDLEdBQUcsQ0FBQyx5Q0FBbUMsQ0FBQyxDQUFBO0lBRTNGLE9BQU87UUFDSCxFQUFFLEVBQUUsWUFBWTtRQUNoQixPQUFPO1FBQ1AsT0FBTztLQUNWLENBQUE7QUFDTCxDQUFDLENBQUE7QUFFRDs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBRyxDQUFDLEVBQVUsRUFBWSxFQUFFO0lBQzVDLE1BQU0sWUFBWSxHQUFHLENBQUMsRUFBRSxzQkFBa0IsQ0FBQyxzQkFBa0IsQ0FBQTtJQUM3RCxNQUFNLE9BQU8sR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxzQkFBa0IsQ0FBQyxDQUFDLHNCQUFrQixDQUFDLHNCQUFvQixDQUFB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","/**\n * DatePlus A simple program to assist with date manipulation\n *\n * @license MIT\n * @version 3.1.0\n * @author Luke Zhang luke-zhang-04.github.io\n * @copyright Copyright (C) 2020 - 2021 Luke Zhang\n */\nexport const values = {\n    hrsPerDay: 24,\n    minsPerHr: 60,\n    secsPerMin: 60,\n    msPerSec: 1000,\n};\n/**\n * Reference to days of the week, zero indexed\n */\nexport const daysReference = {\n    0: \"Sunday\",\n    1: \"Monday\",\n    2: \"Tuesday\",\n    3: \"Wednesday\",\n    4: \"Thursday\",\n    5: \"Friday\",\n    6: \"Saturday\",\n};\n/**\n * Reference to months of a year, zero indexed\n */\nexport const monthsReference = {\n    0: \"January\",\n    1: \"Feburary\",\n    2: \"March\",\n    3: \"April\",\n    4: \"May\",\n    5: \"June\",\n    6: \"July\",\n    7: \"August\",\n    8: \"September\",\n    9: \"October\",\n    10: \"November\",\n    11: \"December\",\n};\nexport const oneDay = 24 /* HrsPerDay */ * 60 /* MinsPerHr */ * 60 /* SecsPerMin */ * 1000 /* MsPerSec */;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsdWVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3ZhbHVlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztHQU9HO0FBU0gsTUFBTSxDQUFDLE1BQU0sTUFBTSxHQUFHO0lBQ2xCLFNBQVMsRUFBRSxFQUFFO0lBQ2IsU0FBUyxFQUFFLEVBQUU7SUFDYixVQUFVLEVBQUUsRUFBRTtJQUNkLFFBQVEsRUFBRSxJQUFJO0NBQ2pCLENBQUE7QUFFRDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRztJQUN6QixDQUFDLEVBQUUsUUFBUTtJQUNYLENBQUMsRUFBRSxRQUFRO0lBQ1gsQ0FBQyxFQUFFLFNBQVM7SUFDWixDQUFDLEVBQUUsV0FBVztJQUNkLENBQUMsRUFBRSxVQUFVO0lBQ2IsQ0FBQyxFQUFFLFFBQVE7SUFDWCxDQUFDLEVBQUUsVUFBVTtDQUNoQixDQUFBO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUc7SUFDM0IsQ0FBQyxFQUFFLFNBQVM7SUFDWixDQUFDLEVBQUUsVUFBVTtJQUNiLENBQUMsRUFBRSxPQUFPO0lBQ1YsQ0FBQyxFQUFFLE9BQU87SUFDVixDQUFDLEVBQUUsS0FBSztJQUNSLENBQUMsRUFBRSxNQUFNO0lBQ1QsQ0FBQyxFQUFFLE1BQU07SUFDVCxDQUFDLEVBQUUsUUFBUTtJQUNYLENBQUMsRUFBRSxXQUFXO0lBQ2QsQ0FBQyxFQUFFLFNBQVM7SUFDWixFQUFFLEVBQUUsVUFBVTtJQUNkLEVBQUUsRUFBRSxVQUFVO0NBQ2pCLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsdUNBQW1DLHNCQUFvQixzQkFBa0IsQ0FBQSJ9","/**\n * DatePlus A simple program to assist with date manipulation\n *\n * @license MIT\n * @version 3.1.0\n * @author Luke Zhang luke-zhang-04.github.io\n * @copyright Copyright (C) 2020 - 2021 Luke Zhang\n */\nimport { daysReference, monthsReference, oneDay } from \"./values\";\n/* eslint-disable id-length */\n/**\n * Reference to months of a year, zero indexed\n */\nconst keysReference = {\n    y: \"year\",\n    m: \"month\",\n    d: \"day\",\n};\n/* eslint-enable id-length */\n/**\n * Add's 0s to date (e.g 2020/4/3 => 2020/04/03)\n *\n * @param date - String date to format\n * @param seperator - Char the date is seperatred by\n * @returns - Date with zeros\n */\nexport const addZeros = (date, seperator = \"/\") => {\n    let newDate = \"\";\n    for (let index = 0; index < 2; index++) {\n        if (date.split(seperator)[index].length < 2) {\n            newDate += `0${date.split(seperator)[index]}${seperator}`;\n        }\n        else {\n            newDate += `${date.split(seperator)[index]}${seperator}`;\n        }\n    }\n    if (date.split(seperator)[2].length < 2) {\n        newDate += `0${date.split(seperator)[2]}`;\n    }\n    else {\n        newDate += date.split(seperator)[2];\n    }\n    return newDate;\n};\n/**\n * Format date into a string in the form YYYY{seperator}MM{seperator}DD\n *\n * @param {Date} date - Date object to format\n * @param seperator - String to seperate date values with\n * @returns Formatted date\n */\nexport const formatDate = (date, seperator = \"/\") => {\n    const month = date.getMonth().toString();\n    const day = date.getDate().toString();\n    const year = date.getFullYear().toString();\n    return [year, month, day].join(seperator);\n};\n/**\n * Gets date values and outputs an object\n *\n * @param date - Date to extract values from, months zero indexed\n * @param format - Format of string date\n * @param seperator - Seperator the date works with; leave auto for auto detection, limited to 1 char\n * @returns Object with all values\n */\nexport const getDateValues = (date, format = \"y:m:d\", seperator = \"auto\") => {\n    let _seperator = \"/\";\n    if (seperator === \"auto\") {\n        for (const letter of date) {\n            if (isNaN(Number(letter))) {\n                _seperator = letter;\n                break;\n            }\n        }\n    }\n    else {\n        _seperator = seperator;\n    }\n    const dateData = date.split(_seperator);\n    const dateFormat = format.split(\":\");\n    const output = {};\n    for (let index = 0; index < 3; index++) {\n        const key = keysReference[dateFormat[index]];\n        output[key] = Number(dateData[index]);\n    }\n    return output;\n};\n/**\n * Converts numerical day of week into word form (e.g 0 => \"Sunday\")\n *\n * @param numerical - Numerical day of week, 0 indexed (0-6)\n * @returns Stringed day of week\n */\nexport const getWordDay = (numerical) => daysReference[numerical];\n/**\n * Converts numerical month into word form (e.g 0 => \"January\")\n *\n * @param numerical - Numerical day of week, 0 indexed (0-11)\n * @returns Stringed worded month\n */\nexport const getWordMonth = (numerical) => monthsReference[numerical];\n/**\n * Calculates number of elapsed days between date1 and date2\n *\n * @param date1 - Starting date object to calculate\n * @param date2 - Ending date object to calculate\n * @returns - Number of elapsed days\n */\nexport const getElapsedDays = (date1, date2) => Math.round((date1.getTime() - date2.getTime()) / oneDay) * -1;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7R0FPRztBQUVILE9BQU8sRUFBQyxhQUFhLEVBQUUsZUFBZSxFQUFFLE1BQU0sRUFBQyxNQUFNLFVBQVUsQ0FBQTtBQWUvRCw4QkFBOEI7QUFDOUI7O0dBRUc7QUFDSCxNQUFNLGFBQWEsR0FBUztJQUN4QixDQUFDLEVBQUUsTUFBTTtJQUNULENBQUMsRUFBRSxPQUFPO0lBQ1YsQ0FBQyxFQUFFLEtBQUs7Q0FDWCxDQUFBO0FBQ0QsNkJBQTZCO0FBRTdCOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxDQUFDLElBQVksRUFBRSxTQUFTLEdBQUcsR0FBRyxFQUFVLEVBQUU7SUFDOUQsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFBO0lBRWhCLEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxFQUFFLEVBQUU7UUFDcEMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDekMsT0FBTyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxTQUFTLEVBQUUsQ0FBQTtTQUM1RDthQUFNO1lBQ0gsT0FBTyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxTQUFTLEVBQUUsQ0FBQTtTQUMzRDtLQUNKO0lBRUQsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7UUFDckMsT0FBTyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FB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","/**\n * DatePlus A simple program to assist with date manipulation\n *\n * @license MIT\n * @version 3.1.0\n * @author Luke Zhang luke-zhang-04.github.io\n * @copyright Copyright (C) 2020 - 2021 Luke Zhang\n */\nimport * as conversions from \"./conversions\";\nimport * as utils from \"./utils\";\nimport * as values from \"./values\";\nexport { conversions, utils, values };\n/**\n * Dateplus - A class and namespace program to assist with date manipulation\n */\nexport class DatePlus extends Date {\n    constructor() {\n        /* eslint-disable @typescript-eslint/lines-between-class-members */\n        super(...arguments);\n        /**\n         * Add's 0s to date (e.g 2020/4/3 => 2020/04/03)\n         *\n         * @param date - String date to format\n         * @param seperator - Char the date is seperatred by\n         * @returns - Date with zeros\n         */\n        this.addZeros = (seperator = \"/\") => utils.addZeros(this.formatDate(), seperator);\n        /**\n         * Format instantiated into a string in the form YYYY{seperator}MM{seperator}DD\n         *\n         * @param seperator - Char to seperate date with\n         * @returns Formatted date\n         */\n        this.formatDate = (seperator = \"/\") => utils.formatDate(this, seperator);\n        /**\n         * Gets instantiated day of week in word form (e.g 0 => \"Sunday\")\n         *\n         * @returns Stringed day of week\n         */\n        this.getWordDay = () => values.daysReference[this.getDay()];\n        /**\n         * Gets instantiated month in word form (e.g 0 => \"January\")\n         *\n         * @returns Stringed worded month\n         */\n        this.getWordMonth = () => values.monthsReference[this.getMonth()];\n        /**\n         * Calculates number of elapsed days between instantiated date and dae\n         *\n         * @param date - Ending date object to calculate\n         * @returns - Number of elapsed days\n         */\n        this.getElapsedDays = (date) => Math.round((this.getTime() - date.getTime()) / values.oneDay) * -1;\n    }\n}\nfor (const [key, value] of Object.entries(Object.assign(Object.assign(Object.assign({}, conversions), utils), values))) {\n    // In the name of bundle size\n    // @ts-expect-error\n    DatePlus[key] = value;\n}\nexport default DatePlus;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7R0FPRztBQUVILE9BQU8sS0FBSyxXQUFXLE1BQU0sZUFBZSxDQUFBO0FBQzVDLE9BQU8sS0FBSyxLQUFLLE1BQU0sU0FBUyxDQUFBO0FBQ2hDLE9BQU8sS0FBSyxNQUFNLE1BQU0sVUFBVSxDQUFBO0FBRWxDLE9BQU8sRUFBQyxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBQyxDQUFBO0FBU25DOztHQUVHO0FBQ0gsTUFBTSxPQUFPLFFBQVMsU0FBUSxJQUFJO0lBQWxDO1FBQ0ksbUVBQW1FOztRQXdFbkU7Ozs7OztXQU1HO1FBQ0ksYUFBUSxHQUFHLENBQUMsU0FBUyxHQUFHLEdBQUcsRUFBVSxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUE7UUFFM0Y7Ozs7O1dBS0c7UUFDSSxlQUFVLEdBQUcsQ0FBQyxTQUFTLEdBQUcsR0FBRyxFQUFVLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQTtRQUVsRjs7OztXQUlHO1FBQ0ksZUFBVSxHQUFHLEdBQVcsRUFBRSxDQUM3QixNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQXVDLENBQUMsQ0FBQTtRQUU1RTs7OztXQUlHO1FBQ0ksaUJBQVksR0FBRyxHQUFXLEVBQUUsQ0FDL0IsTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUF5QyxDQUFDLENBQUE7UUFFbEY7Ozs7O1dBS0c7UUFDSSxtQkFBYyxHQUFHLENBQUMsSUFBVSxFQUFVLEVBQUUsQ0FDM0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7SUFDMUUsQ0FBQztDQUFBO0FBRUQsS0FBSyxNQUFNLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLCtDQUFLLFdBQVcsR0FBSyxLQUFLLEdBQUssTUFBTSxFQUFFLEVBQUU7SUFDOUUsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQixRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFBO0NBQ3hCO0FBRUQsZUFBZSxRQUFRLENBQUEifQ=="],"names":["utils.addZeros","utils.formatDate","values.daysReference","values.monthsReference","values.oneDay","values"],"mappings":";;;;;;;;;AAoGA;;;;;AAKG;AACI,MAAM,QAAQ,GAAI,EAAD,KAA6B;AACjD,EAAA,EAAE,EAAE,EAAE,GAAA,IAD2C;AAEjD,EAAA,OAAO,EAAE,CAAC,EAAE,GAAI,EAAE,GAAA,IAAT,IAA6B;AAFW,CAA7B,CAAjB;AAKP;;;;;AAKG;;AACI,MAAM,QAAQ,GAAI,EAAD,IAA2B;AAC/C,QAAM,YAAY,GAAI,EAAE,GAAA,IAAH,GAAsB,IAA3C;AACA,QAAM,OAAO,GAAI,CAAC,EAAE,GAAI,EAAE,GAAA,IAAT,IAA6B,IAA9B,GAAiD,EAAjE;AACA,QAAM,OAAO,GACT,CAAC,EAAE,GAAG,OAAO,GAAA,IAAZ,GAAiC,YAAlC,KAAmD,OAAA,EAAnD,CADJ;AAGA,SAAO;AACH,IAAA,EAAE,EAAE,YADD;AAEH,IAAA,OAFG;AAGH,IAAA;AAHG,GAAP;AAKH,CAXM;AAaP;;;;;AAKG;;AACI,MAAM,OAAO,GAAI,EAAD,IAAyB;AAC5C,QAAM,YAAY,GAAI,EAAE,GAAA,IAAH,GAAsB,IAA3C;AACA,QAAM,OAAO,GAAI,CAAC,EAAE,GAAI,EAAE,GAAA,IAAT,IAA6B,IAA9B,GAAiD,EAAjE;AACA,QAAM,OAAO,GACR,CAAC,EAAE,GAAG,OAAO,GAAA,IAAZ,GAAiC,YAAlC,KAAmD,OAAA,EAAnD,CAAD,GACgB,EAFpB;AAGA,QAAM,KAAK,GACP,CAAC,EAAE,GACC,OAAO,GAAA,IAAP,GAAyB,EAD5B,GAEG,OAAO,GAAA,IAFV,GAGG,YAHJ,KAIC,OAAA,EAAA,GAAmC,EAJpC,CADJ;AAOA,SAAO;AACH,IAAA,EAAE,EAAE,YADD;AAEH,IAAA,OAFG;AAGH,IAAA,OAHG;AAIH,IAAA;AAJG,GAAP;AAMH,CAnBM;AAqBP;;;;;AAKG;;AACI,MAAM,QAAQ,GAAI,EAAD,IAAwB;AAC5C,QAAM,YAAY,GAAI,EAAE,GAAA,IAAH,GAAsB,IAA3C;AACA,QAAM,OAAO,GAAI,CAAC,EAAE,GAAI,EAAE,GAAA,IAAT,IAA6B,IAA9B,GAAiD,EAAjE;AACA,QAAM,OAAO,GACR,CAAC,EAAE,GAAG,OAAO,GAAA,IAAZ,GAAiC,YAAlC,KAAmD,OAAA,EAAnD,CAAD,GACgB,EAFpB;AAGA,QAAM,KAAK,GACN,CAAC,EAAE,GACA,OAAO,GAAA,IAAP,GAAyB,EAD3B,GAEE,OAAO,GAAA,IAFT,GAGE,YAHH,KAII,OAAA,EAAA,GAAmC,EAJvC,CAAD,GAKgB,EANpB;AAOA,QAAM,IAAI,GACN,CAAC,EAAE,GACC,KAAK,GAAA,IAAL,GAAuB,EAAvB,GAA2C,EAD9C,GAEG,OAAO,GAAA,IAAP,GAAyB,EAF5B,GAGG,OAAO,GAAA,IAHV,GAIG,YAJJ,KAKC,OAAA,EAAA,GAAmC,EAAnC,GAAsD,EALvD,CADJ;AAQA,SAAO;AACH,IAAA,EAAE,EAAE,YADD;AAEH,IAAA,OAFG;AAGH,IAAA,OAHG;AAIH,IAAA,KAJG;AAKH,IAAA;AALG,GAAP;AAOH,CA5BM;AA+BP;;;;;AAKG;;AACI,MAAM,QAAQ,GAAI,IAAD,IAA0B,IAAI,GAAA,IAA/C;AAEP;;;;;AAKG;;AACI,MAAM,UAAU,GAAI,IAAD,IAA8B,QAAQ,CAAC,QAAQ,CAAC,IAAD,CAAT,CAAzD;AAEP;;;;;AAKG;;AACI,MAAM,SAAS,GAAI,IAAD,IAA4B,OAAO,CAAC,QAAQ,CAAC,IAAD,CAAT,CAArD;AAEP;;;;;AAKG;;AACI,MAAM,UAAU,GAAI,IAAD,IAA2B,QAAQ,CAAC,QAAQ,CAAC,IAAD,CAAT,CAAtD;AAEP;;;;;AAKG;;AACI,MAAM,QAAQ,GAAI,IAAD,IAA0B,IAAI,GAAA,EAAJ,GAAwB,IAAnE;AAEP;;;;;AAKG;;AACI,MAAM,UAAU,GAAI,IAAD,IAA0B,IAAI,GAAA,EAAjD;AAEP;;;;;AAKG;;AACI,MAAM,SAAS,GAAI,IAAD,IAA4B,OAAO,CAAC,QAAQ,CAAC,IAAD,CAAT,CAArD;AAEP;;;;;AAKG;;AACI,MAAM,UAAU,GAAI,IAAD,IAA2B,QAAQ,CAAC,QAAQ,CAAC,IAAD,CAAT,CAAtD;AAEP;;;;;AAKG;;AACI,MAAM,OAAO,GAAI,KAAD,IACnB,KAAK,GAAA,EAAL,GAAwB,EAAxB,GAA4C,IADzC;AAGP;;;;;AAKG;;AACI,MAAM,SAAS,GAAI,KAAD,IAA2B,KAAK,GAAA,EAAL,GAAwB,EAArE;AAEP;;;;;AAKG;;AACI,MAAM,SAAS,GAAI,KAAD,IAA2B,KAAK,GAAA,EAAlD;AAEP;;;;;AAKG;;AACI,MAAM,SAAS,GAAI,GAAD,IAA0B,QAAQ,CAAC,OAAO,CAAC,GAAD,CAAR,CAApD;AAEP;;;;;AAKG;;AACI,MAAM,QAAQ,GAAI,IAAD,IACpB,IAAI,GAAA,EAAJ,GAAuB,EAAvB,GAA0C,EAA1C,GAA8D,IAD3D;AAGP;;;;;AAKG;;AACI,MAAM,UAAU,GAAI,IAAD,IACtB,IAAI,GAAA,EAAJ,GAAuB,EAAvB,GAA0C,EADvC;AAGP;;;;;AAKG;;AACI,MAAM,UAAU,GAAI,IAAD,IAA0B,IAAI,GAAA,EAAJ,GAAuB,EAApE;AAEP;;;;;AAKG;;AACI,MAAM,SAAS,GAAI,IAAD,IAA0B,IAAI,GAAA,EAAhD;;;;;;;;;;;;;;;;;;;;;;;;;;ACnTA,MAAM,MAAM,GAAG;AAClB,EAAA,SAAS,EAAE,EADO;AAElB,EAAA,SAAS,EAAE,EAFO;AAGlB,EAAA,UAAU,EAAE,EAHM;AAIlB,EAAA,QAAQ,EAAE;AAJQ,CAAf;AAUA,MAAM,aAAa,GAAG;AACzB,KAAG,QADsB;AAEzB,KAAG,QAFsB;AAGzB,KAAG,SAHsB;AAIzB,KAAG,WAJsB;AAKzB,KAAG,UALsB;AAMzB,KAAG,QANsB;AAOzB,KAAG;AAPsB,CAAtB;AAaA,MAAM,eAAe,GAAG;AAC3B,KAAG,SADwB;AAE3B,KAAG,UAFwB;AAG3B,KAAG,OAHwB;AAI3B,KAAG,OAJwB;AAK3B,KAAG,KALwB;AAM3B,KAAG,MANwB;AAO3B,KAAG,MAPwB;AAQ3B,KAAG,QARwB;AAS3B,KAAG,WATwB;AAU3B,KAAG,SAVwB;AAW3B,MAAI,UAXuB;AAY3B,MAAI;AAZuB,CAAxB;AAeA,MAAM,MAAM,GAAG,KAAA,EAAA,GAAmC,EAAnC,GAAuD,IAAtE;;;;;;;;;;AC1BP,MAAM,aAAa,GAAS;AACxB,EAAA,CAAC,EAAE,MADqB;AAExB,EAAA,CAAC,EAAE,OAFqB;AAGxB,EAAA,CAAC,EAAE;AAHqB,CAA5B;AAOA;;;;;;AAMG;;AACI,MAAM,QAAQ,GAAG,CAAC,IAAD,EAAe,SAAS,GAAG,GAA3B,KAA0C;AAC9D,MAAI,OAAO,GAAG,EAAd;;AAEA,OAAK,IAAI,KAAK,GAAG,CAAjB,EAAoB,KAAK,GAAG,CAA5B,EAA+B,KAAK,EAApC,EAAwC;AACpC,QAAI,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB,KAAtB,EAA6B,MAA7B,GAAsC,CAA1C,EAA6C;AACzC,MAAA,OAAO,IAAI,IAAI,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB,KAAtB,CAA4B,GAAG,SAAS,EAAvD;AACH,KAFD,MAEO;AACH,MAAA,OAAO,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB,KAAtB,CAA4B,GAAG,SAAS,EAAtD;AACH;AACJ;;AAED,MAAI,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB,CAAtB,EAAyB,MAAzB,GAAkC,CAAtC,EAAyC;AACrC,IAAA,OAAO,IAAI,IAAI,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB,CAAtB,CAAwB,EAAvC;AACH,GAFD,MAEO;AACH,IAAA,OAAO,IAAI,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB,CAAtB,CAAX;AACH;;AAED,SAAO,OAAP;AACH,CAlBM;AAoBP;;;;;;AAMG;;AACI,MAAM,UAAU,GAAG,CAAC,IAAD,EAAa,SAAS,GAAG,GAAzB,KAAwC;AAC9D,QAAM,KAAK,GAAG,IAAI,CAAC,QAAL,GAAgB,QAAhB,EAAd;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,OAAL,GAAe,QAAf,EAAZ;AACA,QAAM,IAAI,GAAG,IAAI,CAAC,WAAL,GAAmB,QAAnB,EAAb;AAEA,SAAO,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,CAAwB,SAAxB,CAAP;AACH,CANM;AAQP;;;;;;;AAOG;;AACI,MAAM,aAAa,GAAG,CACzB,IADyB,EAEzB,MAAA,GAAqB,OAFI,EAGzB,SAAS,GAAG,MAHa,KAIhB;AACT,MAAI,UAAU,GAAG,GAAjB;;AAIA,MAAI,SAAS,KAAK,MAAlB,EAA0B;AACtB,SAAK,MAAM,MAAX,IAAqB,IAArB,EAA2B;AACvB,UAAI,KAAK,CAAC,MAAM,CAAC,MAAD,CAAP,CAAT,EAA2B;AACvB,QAAA,UAAU,GAAG,MAAb;AACA;AACH;AACJ;AACJ,GAPD,MAOO;AACH,IAAA,UAAU,GAAG,SAAb;AACH;;AAED,QAAM,QAAQ,GAAG,IAAI,CAAC,KAAL,CAAW,UAAX,CAAjB;AACA,QAAM,UAAU,GAAY,MAAM,CAAC,KAAP,CAAa,GAAb,CAA5B;AACA,QAAM,MAAM,GAA4B,EAAxC;;AAEA,OAAK,IAAI,KAAK,GAAG,CAAjB,EAAoB,KAAK,GAAG,CAA5B,EAA+B,KAAK,EAApC,EAAwC;AACpC,UAAM,GAAG,GAAG,aAAa,CAAC,UAAU,CAAC,KAAD,CAAX,CAAzB;AAEA,IAAA,MAAM,CAAC,GAAD,CAAN,GAAc,MAAM,CAAC,QAAQ,CAAC,KAAD,CAAT,CAApB;AACH;;AAED,SAAO,MAAP;AACH,CA/BM;AAiCP;;;;;AAKG;;AACI,MAAM,UAAU,GAAI,SAAD,IACtB,aAAa,CAAC,SAAD,CADV;AAGP;;;;;AAKG;;AACI,MAAM,YAAY,GAAI,SAAD,IACxB,eAAe,CAAC,SAAD,CADZ;AAGP;;;;;;AAMG;;AACI,MAAM,cAAc,GAAG,CAAC,KAAD,EAAc,KAAd,KAC1B,IAAI,CAAC,KAAL,CAAW,CAAC,KAAK,CAAC,OAAN,KAAkB,KAAK,CAAC,OAAN,EAAnB,IAAsC,MAAjD,IAA2D,CAAC,CADzD;;;;;;;;;;;;ACtHD,MAAO,QAAP,SAAwB,IAAxB,CAA4B;AAAlC,EAAA,WAAA,GAAA;;AAyEI;;;;;;AAMG;;AACI,SAAA,QAAA,GAAW,CAAC,SAAS,GAAG,GAAb,KAA6BA,QAAA,CAAe,KAAK,UAAL,EAAf,EAAkC,SAAlC,CAAxC;AAEP;;;;;AAKG;;;AACI,SAAA,UAAA,GAAa,CAAC,SAAS,GAAG,GAAb,KAA6BC,UAAA,CAAiB,IAAjB,EAAuB,SAAvB,CAA1C;AAEP;;;;AAIG;;;AACI,SAAA,UAAA,GAAa,MAChBC,aAAA,CAAqB,KAAK,MAAL,EAArB,CADG;AAGP;;;;AAIG;;;AACI,SAAA,YAAA,GAAe,MAClBC,eAAA,CAAuB,KAAK,QAAL,EAAvB,CADG;AAGP;;;;;AAKG;;;AACI,SAAA,cAAA,GAAkB,IAAD,IACpB,IAAI,CAAC,KAAL,CAAW,CAAC,KAAK,OAAL,KAAiB,IAAI,CAAC,OAAL,EAAlB,IAAoCC,MAA/C,IAAgE,CAAC,CAD9D;AAEV;;AAlHiC;;AAoHlC,KAAK,MAAM,CAAC,GAAD,EAAM,KAAN,CAAX,IAA2B,MAAM,CAAC,OAAP,CAAc,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,WAAL,CAAA,EAAqB,KAArB,CAAA,EAA+BC,QAA/B,CAAd,CAA3B,EAAkF;AAE9E;AACA,EAAA,QAAQ,CAAC,GAAD,CAAR,GAAgB,KAAhB;AACH;;;;;"}