{"version":3,"file":"dateplus.cjs","sources":["../../lib/conversions.js","../../lib/elapse.js","../../lib/alias.js","../../lib/index.js"],"sourcesContent":["/**\n * DatePlus A simple program to assist with date manipulation\n *\n * @license MIT\n * @version 3.1.0\n * @author Luke Zhang luke-zhang-04.github.io\n * @file defines Convert class for converting units\n * @copyright Copyright (C) 2020 - 2021 Luke Zhang\n * @exports Convert\n */\n/**\n * Convert namespace\n *\n * @namespace\n * @classdesc A namespace program to convert units\n */\nexport default class Convert extends Date {\n}\n/**\n * Converts milliseconds to seconds with remainders\n *\n * @param {number} ms - Milliseconds to convert\n * @returns {Object<string, number>} Object with seconds and milliseconds\n * @public\n * @static\n */\nConvert.msToSecs = (ms) => ({\n    ms: ms % 1000 /* MsPerSec */,\n    seconds: (ms - (ms % 1000 /* MsPerSec */)) / 1000 /* MsPerSec */,\n});\n/**\n * Converts milliseconds to minutes with remainders\n *\n * @param {number} ms - Milliseconds to convert\n * @returns {Object<string, number>} Object with minutes, seconds, and milliseconds\n * @public\n * @static\n */\nConvert.msToMins = (ms) => {\n    const milliseconds = (ms % 1000 /* MsPerSec */) % 1000 /* MsPerSec */;\n    const seconds = ((ms - (ms % 1000 /* MsPerSec */)) / 1000 /* MsPerSec */) % 60 /* SecsPerMin */;\n    const minutes = (ms - seconds * 1000 /* MsPerSec */ - milliseconds) / (1000 /* MsPerSec */ * 60 /* SecsPerMin */);\n    return {\n        ms: milliseconds,\n        seconds,\n        minutes,\n    };\n};\n/**\n * Converts milliseconds to hours with remainders\n *\n * @param {number} ms - Milliseconds to convert\n * @returns {Object<string, number>} Object with hours, minutes, seconds, and milliseconds\n * @public\n * @static\n */\nConvert.msToHrs = (ms) => {\n    const milliseconds = (ms % 1000 /* MsPerSec */) % 1000 /* MsPerSec */;\n    const seconds = ((ms - (ms % 1000 /* MsPerSec */)) / 1000 /* MsPerSec */) % 60 /* SecsPerMin */;\n    const minutes = ((ms - seconds * 1000 /* MsPerSec */ - milliseconds) /\n        (1000 /* MsPerSec */ * 60 /* SecsPerMin */)) %\n        60 /* MinsPerHr */;\n    const hours = (ms -\n        minutes * 1000 /* MsPerSec */ * 60 /* SecsPerMin */ -\n        seconds * 1000 /* MsPerSec */ -\n        milliseconds) /\n        (1000 /* MsPerSec */ * 60 /* SecsPerMin */ * 60 /* MinsPerHr */);\n    return {\n        ms: milliseconds,\n        seconds,\n        minutes,\n        hours,\n    };\n};\n/**\n * Converts milliseconds to days with remainders\n *\n * @param {number} ms - Milliseconds to convert\n * @returns {Object<string, number>} Object with days, hours, minutes, seconds, and milliseconds\n * @public\n * @static\n */\nConvert.msToDays = (ms) => {\n    const milliseconds = (ms % 1000 /* MsPerSec */) % 1000 /* MsPerSec */;\n    const seconds = ((ms - (ms % 1000 /* MsPerSec */)) / 1000 /* MsPerSec */) % 60 /* SecsPerMin */;\n    const minutes = ((ms - seconds * 1000 /* MsPerSec */ - milliseconds) /\n        (1000 /* MsPerSec */ * 60 /* SecsPerMin */)) %\n        60 /* MinsPerHr */;\n    const hours = ((ms -\n        minutes * 1000 /* MsPerSec */ * 60 /* SecsPerMin */ -\n        seconds * 1000 /* MsPerSec */ -\n        milliseconds) /\n        (1000 /* MsPerSec */ * 60 /* SecsPerMin */ * 60 /* MinsPerHr */)) %\n        24 /* HrsPerDay */;\n    const days = (ms -\n        hours * 1000 /* MsPerSec */ * 60 /* SecsPerMin */ * 60 /* MinsPerHr */ -\n        minutes * 1000 /* MsPerSec */ * 60 /* SecsPerMin */ -\n        seconds * 1000 /* MsPerSec */ -\n        milliseconds) /\n        (1000 /* MsPerSec */ * 60 /* SecsPerMin */ * 60 /* MinsPerHr */ * 24 /* HrsPerDay */);\n    return {\n        ms: milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n    };\n};\n/* eslint-disable max-len */\n/**\n * Converts seconds to milliseconds\n *\n * @param {number} secs - Seconds to convert\n * @returns {number} Converted milliseconds\n * @public\n * @static\n */\nConvert.secsToMs = (secs) => secs * 1000 /* MsPerSec */;\n/**\n * Converts seconds to minutes with remainders\n *\n * @param {number} secs - Seconds to convert\n * @returns {Object<string, number>} Converted minutes\n * @public\n * @static\n */\nConvert.secsToMins = (secs) => Convert.msToMins(Convert.secsToMs(secs));\n/**\n * Converts seconds to hours with remainders\n *\n * @param {number} secs - Seconds to convert\n * @returns {Object<string, number>} Converted hours\n * @public\n * @static\n */\nConvert.secsToHrs = (secs) => Convert.msToHrs(Convert.secsToMs(secs));\n/**\n * Converts seconds to days with remainders\n *\n * @param {number} secs - Seconds to convert\n * @returns {Object<string, number>} Converted days\n * @public\n * @static\n */\nConvert.secsToDays = (secs) => Convert.msToDays(Convert.secsToMs(secs));\n/**\n * Converts hours to milliseconds\n *\n * @param {number} mins - Minutes to convert\n * @returns {number} Converted milliseconds\n * @public\n * @static\n */\nConvert.minsToMs = (mins) => mins * 60 /* SecsPerMin */ * 1000 /* MsPerSec */;\n/**\n * Converts hours to seconds\n *\n * @param {number} mins - Minutes to convert\n * @returns {number} Converted seconds\n * @public\n * @static\n */\nConvert.minsToSecs = (mins) => mins * 60 /* SecsPerMin */;\n/**\n * Converts minutes to hours with remainders\n *\n * @param {number} mins - Minutes to convert\n * @returns {Object<string, number>} Converted hours\n * @public\n * @static\n */\nConvert.minsToHrs = (mins) => Convert.msToHrs(Convert.minsToMs(mins));\n/**\n * Converts minutes to days with remainders\n *\n * @param {number} mins - Minutes to convert\n * @returns {Object<string, number>} Converted days\n * @public\n * @static\n */\nConvert.minsToDays = (mins) => Convert.msToDays(Convert.minsToMs(mins));\n/**\n * Converts hours to milliseconds\n *\n * @param {number} hours - Hours to convert\n * @returns {number} Converted milliseconds\n * @public\n * @static\n */\nConvert.hrsToMs = (hours) => hours * 60 /* MinsPerHr */ * 60 /* SecsPerMin */ * 1000 /* MsPerSec */;\n/**\n * Converts hours to seconds\n *\n * @param {number} hours - Hours to convert\n * @returns {number} Converted seconds\n * @public\n * @static\n */\nConvert.hrsToSecs = (hours) => hours * 60 /* MinsPerHr */ * 60 /* SecsPerMin */;\n/**\n * Converts hours to minutes\n *\n * @param {number} hours - Hours to convert\n * @returns {number} Converted minutes\n * @public\n * @static\n */\nConvert.hrsToMins = (hours) => hours * 60 /* MinsPerHr */;\n/**\n * Converts hours to days with remainders\n *\n * @param {number} hrs - Hours to convert\n * @returns {Object<string, number>} Converted days\n * @public\n * @static\n */\nConvert.hrsToDays = (hrs) => Convert.msToDays(Convert.hrsToMs(hrs));\n/**\n * Converts days to milliseconds\n *\n * @param {number} days - Days to convert\n * @returns {number} Converted milliseconds\n * @public\n * @static\n */\nConvert.daysToMs = (days) => days * 24 /* HrsPerDay */ * 60 /* MinsPerHr */ * 60 /* SecsPerMin */ * 1000 /* MsPerSec */;\n/**\n * Converts days to seconds\n *\n * @param {number} days - Days to convert\n * @returns {number} Converted seconds\n * @public\n * @static\n */\nConvert.daysToSecs = (days) => days * 24 /* HrsPerDay */ * 60 /* MinsPerHr */ * 60 /* SecsPerMin */;\n/**\n * Converts days to minutes\n *\n * @param {number} days - Days to convert\n * @returns {number} Converted minutes\n * @public\n * @static\n */\nConvert.daysToMins = (days) => days * 24 /* HrsPerDay */ * 60 /* MinsPerHr */;\n/**\n * Converts days to hours\n *\n * @param {number} days - Days to convert\n * @returns {number} Converted hours\n * @public\n * @static\n */\nConvert.daysToHrs = (days) => days * 24 /* HrsPerDay */;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVyc2lvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvY29udmVyc2lvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztHQVNHO0FBS0g7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsT0FBTyxPQUFPLE9BQVEsU0FBUSxJQUFJOztBQUNyQzs7Ozs7OztHQU9HO0FBQ1csZ0JBQVEsR0FBRyxDQUFDLEVBQVUsRUFBeUIsRUFBRSxDQUFDLENBQUM7SUFDN0QsRUFBRSxFQUFFLEVBQUUsc0JBQWtCO0lBQ3hCLE9BQU8sRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUUsc0JBQWtCLENBQUMsQ0FBQyxzQkFBa0I7Q0FDM0QsQ0FBQyxDQUFBO0FBRUY7Ozs7Ozs7R0FPRztBQUNXLGdCQUFRLEdBQUcsQ0FBQyxFQUFVLEVBQXlCLEVBQUU7SUFDM0QsTUFBTSxZQUFZLEdBQUcsQ0FBQyxFQUFFLHNCQUFrQixDQUFDLHNCQUFrQixDQUFBO0lBQzdELE1BQU0sT0FBTyxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxFQUFFLHNCQUFrQixDQUFDLENBQUMsc0JBQWtCLENBQUMsc0JBQW9CLENBQUE7SUFDckYsTUFBTSxPQUFPLEdBQ1QsQ0FBQyxFQUFFLEdBQUcsT0FBTyxzQkFBa0IsR0FBRyxZQUFZLENBQUMsR0FBRyxDQUFDLHlDQUFtQyxDQUFDLENBQUE7SUFFM0YsT0FBTztRQUNILEVBQUUsRUFBRSxZQUFZO1FBQ2hCLE9BQU87UUFDUCxPQUFPO0tBQ1YsQ0FBQTtBQUNMLENBQUMsQ0FBQTtBQUVEOzs7Ozs7O0dBT0c7QUFDVyxlQUFPLEdBQUcsQ0FBQyxFQUFVLEVBQXVCLEVBQUU7SUFDeEQsTUFBTSxZQUFZLEdBQUcsQ0FBQyxFQUFFLHNCQUFrQixDQUFDLHNCQUFrQixDQUFBO0lBQzdELE1BQU0sT0FBTyxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxFQUFFLHNCQUFrQixDQUFDLENBQUMs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","/**\n * DatePlus A simple program to assist with date manipulation\n *\n * @license MIT\n * @version 3.1.0\n * @author Luke Zhang luke-zhang-04.github.io\n * @file defines Elapse class for elapsed\n * @copyright Copyright (C) 2020 - 2021 Luke Zhang\n * @exports Elapse\n */\nimport Convert from \"./conversions\";\n/* eslint-enable no-shadow */\n/**\n * Elapse class and namespace\n *\n * @namespace\n * @class\n * @classdesc A class and namespace program to find elapsed times\n */\nexport default class Elapse extends Convert {\n    constructor() {\n        super(...arguments);\n        /**\n         * Calculates number of elapsed days between instantiated date and dae\n         *\n         * @param {Date | DatePlus} date - Ending date object to calculate\n         * @returns {number} - Number of elapsed days\n         * @public\n         * @instance\n         */\n        this.getElapsedDays = (date) => Math.round((this.getTime() - date.getTime()) / Elapse._oneDay) * -1;\n    }\n}\n/**\n * Gets milliseconds per day\n *\n * @private\n * @type {number}\n * @static\n */\nElapse._oneDay = 24 /* HrsPerDay */ * 60 /* MinsPerHr */ * 60 /* SecsPerMin */ * 1000 /* MsPerSec */;\n/**\n * Calculates number of elapsed days between date1 and date2\n *\n * @param {Date | DatePlus} date1 - Starting date object to calculate\n * @param {Date | DatePlus} date2 - Ending date object to calculate\n * @returns {number} - Number of elapsed days\n * @public\n * @static\n */\nElapse.getElapsedDays = (date1, date2) => Math.round((date1.getTime() - date2.getTime()) / Elapse._oneDay) * -1;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxhcHNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2VsYXBzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0dBU0c7QUFFSCxPQUFPLE9BQU8sTUFBTSxlQUFlLENBQUE7QUFVbkMsNkJBQTZCO0FBRTdCOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxPQUFPLE9BQU8sTUFBTyxTQUFRLE9BQU87SUFBM0M7O1FBdUJJOzs7Ozs7O1dBT0c7UUFDSSxtQkFBYyxHQUFHLENBQUMsSUFBcUIsRUFBVSxFQUFFLENBQ3RELElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO0lBQzNFLENBQUM7O0FBaENHOzs7Ozs7R0FNRztBQUNZLGNBQU8sR0FDbEIsdUNBQW1DLHNCQUFvQixzQkFBa0IsQ0FBQTtBQUU3RTs7Ozs7Ozs7R0FRRztBQUNXLHFCQUFjLEdBQUcsQ0FBQyxLQUFzQixFQUFFLEtBQXNCLEVBQVUsRUFBRSxDQUN0RixJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQSJ9","/**\n * DatePlus A simple program to assist with date manipulation\n *\n * @license MIT\n * @version 3.1.0\n * @author Luke Zhang luke-zhang-04.github.io\n * @file defines Alias static methods from conversion.ts with longer names\n * @copyright Copyright (C) 2020 - 2021 Luke Zhang\n * @exports Alias\n */\nimport Elapse from \"./elapse\";\nexport default class Alias extends Elapse {\n}\n/**\n * Converts milliseconds to seconds with remainders\n *\n * @param {number} ms - Milliseconds to convert\n * @returns {Object<string, number>} Object with seconds and milliseconds\n * @public\n * @static\n */\nAlias.msToSeconds = Alias.msToSecs;\n/**\n * Converts milliseconds to minutes with remainders\n *\n * @param {number} ms - Milliseconds to convert\n * @returns {Object<string, number>} Object with minutes, seconds, and milliseconds\n * @public\n * @static\n */\nAlias.msToMinutes = Alias.msToMins;\n/**\n * Converts milliseconds to hours with remainders\n *\n * @param {number} ms - Milliseconds to convert\n * @returns {Object<string, number>} Object with hours, minutes, seconds, and milliseconds\n * @public\n * @static\n */\nAlias.msToHours = Alias.msToHrs;\n/**\n * Converts seconds to milliseconds\n *\n * @param {number} secs - Seconds to convert\n * @returns {number} Converted milliseconds\n * @public\n * @static\n */\nAlias.secondsToMs = Alias.secsToMs;\n/**\n * Converts seconds to minutes with remainders\n *\n * @param {number} secs - Seconds to convert\n * @returns {Object<string, number>} Converted minutes\n * @public\n * @static\n */\nAlias.secondsToMinutes = Alias.secsToMins;\n/**\n * Converts seconds to hours with remainders\n *\n * @param {number} secs - Seconds to convert\n * @returns {Object<string, number>} Converted hours\n * @public\n * @static\n */\nAlias.secondsToHours = Alias.secsToHrs;\n/**\n * Converts seconds to days with remainders\n *\n * @param {number} secs - Seconds to convert\n * @returns {Object<string, number>} Converted days\n * @public\n * @static\n */\nAlias.secondsToDays = Alias.secsToDays;\n/**\n * Converts hours to milliseconds\n *\n * @param {number} mins - Minutes to convert\n * @returns {number} Converted milliseconds\n * @public\n * @static\n */\nAlias.minutesToMs = Alias.minsToMs;\n/**\n * Converts hours to seconds\n *\n * @param {number} mins - Minutes to convert\n * @returns {number} Converted seconds\n * @public\n * @static\n */\nAlias.minutesToSeconds = Alias.minsToSecs;\n/**\n * Converts minutes to hours with remainders\n *\n * @param {number} mins - Minutes to convert\n * @returns {Object<string, number>} Converted hours\n * @public\n * @static\n */\nAlias.minutesToHours = Alias.minsToHrs;\n/**\n * Converts minutes to days with remainders\n *\n * @param {number} mins - Minutes to convert\n * @returns {Object<string, number>} Converted days\n * @public\n * @static\n */\nAlias.minutesToDays = Alias.minsToDays;\n/**\n * Converts hours to milliseconds\n *\n * @param {number} hours - Hours to convert\n * @returns {number} Converted milliseconds\n * @public\n * @static\n */\nAlias.hoursToMs = Alias.hrsToMs;\n/**\n * Converts hours to seconds\n *\n * @param {number} hours - Hours to convert\n * @returns {number} Converted seconds\n * @public\n * @static\n */\nAlias.hoursToSeconds = Alias.hrsToSecs;\n/**\n * Converts hours to minutes\n *\n * @param {number} hours - Hours to convert\n * @returns {number} Converted minutes\n * @public\n * @static\n */\nAlias.hoursToMinutes = Alias.hrsToMins;\n/**\n * Converts hours to days with remainders\n *\n * @param {number} hrs - Hours to convert\n * @returns {Object<string, number>} Converted days\n * @public\n * @static\n */\nAlias.hoursToDays = Alias.hrsToDays;\n/**\n * Converts days to seconds\n *\n * @param {number} days - Days to convert\n * @returns {number} Converted seconds\n * @public\n * @static\n */\nAlias.daysToSeconds = Alias.daysToSecs;\n/**\n * Converts days to minutes\n *\n * @param {number} days - Days to convert\n * @returns {number} Converted minutes\n * @public\n * @static\n */\nAlias.daysToMinutes = Alias.daysToMins;\n/**\n * Converts days to hours\n *\n * @param {number} days - Days to convert\n * @returns {number} Converted hours\n * @public\n * @static\n */\nAlias.daysToHours = Alias.daysToHrs;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxpYXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvYWxpYXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztHQVNHO0FBRUgsT0FBTyxNQUFNLE1BQU0sVUFBVSxDQUFBO0FBRTdCLE1BQU0sQ0FBQyxPQUFPLE9BQU8sS0FBTSxTQUFRLE1BQU07O0FBQ3JDOzs7Ozs7O0dBT0c7QUFDVyxpQkFBVyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUE7QUFFMUM7Ozs7Ozs7R0FPRztBQUNXLGlCQUFXLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQTtBQUUxQzs7Ozs7OztHQU9HO0FBQ1csZUFBUyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUE7QUFFdkM7Ozs7Ozs7R0FPRztBQUNXLGlCQUFXLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQTtBQUUxQzs7Ozs7OztHQU9HO0FBQ1csc0JBQWdCLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQTtBQUVqRDs7Ozs7OztHQU9HO0FBQ1csb0JBQWMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFBO0FBRTlDOzs7Ozs7O0dBT0c7QUFDVyxtQkFBYSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUE7QUFFOUM7Ozs7Ozs7R0FPRztBQUNXLGlCQUFXLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQTtBQUUxQzs7Ozs7OztHQU9HO0FBQ1csc0JBQWdCLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQTtBQUVqRDs7Ozs7OztHQU9HO0FBQ1csb0JBQWMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFBO0FBRTlDOzs7Ozs7O0dBT0c7QUFDVyxtQkFBYSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUE7QUFFOUM7Ozs7Ozs7R0FPRztBQUNXLGVBQVMsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFBO0FBRXZDOzs7Ozs7O0dBT0c7QUFDVyxvQkFBYyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUE7QUFFOUM7Ozs7Ozs7R0FPRztBQUNXLG9CQUFjLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQTtBQUU5Qzs7Ozs7OztHQU9HO0FBQ1csaUJBQVcsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFBO0FBRTNDOzs7Ozs7O0dBT0c7QUFDVyxtQkFBYSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUE7QUFFOUM7Ozs7Ozs7R0FPRztBQUNXLG1CQUFhLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQTtBQUU5Qzs7Ozs7OztHQU9HO0FBQ1csaUJBQVcsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFBIn0=","/**\n * DatePlus A simple program to assist with date manipulation\n *\n * @license MIT\n * @version 3.1.0\n * @author Luke Zhang luke-zhang-04.github.io\n * @file exports Main dateplus object\n * @copyright Copyright (C) 2020 - 2021 Luke Zhang\n * @exports DatePlus\n */\nimport Alias from \"./alias\";\n/* eslint-enable no-magic-numbers */\n/**\n * Dateplus class and namespace\n *\n * @namespace\n * @class\n * @classdesc A class and namespace program to assist with date manipulation\n */\nexport class DatePlus extends Alias {\n    constructor() {\n        super(...arguments);\n        /**\n         * Add's 0s to the instantiated (e.g 2020/4/3 => 2020/04/03)\n         *\n         * @param {string} seperator - Char the date is seperatred by\n         * @returns {string} - Date with zeros\n         * @public\n         * @instance\n         */\n        this.addZeros = (seperator = \"/\") => DatePlus.addZeros(this.formatDate(), seperator);\n        /**\n         * Format instantiated into a string in the form YYYY{seperator}MM{seperator}DD\n         *\n         * @param {string} seperator - Char to seperate date with\n         * @returns {string} Formatted date\n         * @public\n         * @instance\n         */\n        this.formatDate = (seperator = \"/\") => DatePlus.formatDate(this, seperator);\n        /**\n         * Gets instantiated day of week in word form (e.g 0 => \"Sunday\")\n         *\n         * @returns {string} Stringed day of week\n         * @public\n         * @instance\n         */\n        this.getWordDay = () => DatePlus._daysReference[this.getDay()];\n        /**\n         * Gets instantiated month in word form (e.g 0 => \"January\")\n         *\n         * @returns {string} Stringed worded month\n         * @public\n         * @instance\n         */\n        this.getWordMonth = () => DatePlus._monthsReference[this.getMonth()];\n        /* eslint-enable max-len */\n    }\n}\n/**\n * Reference to days of the week, zero indexed\n *\n * @private\n * @type {Object<number, string>}\n * @static\n */\nDatePlus._daysReference = {\n    0: \"Sunday\",\n    1: \"Monday\",\n    2: \"Tuesday\",\n    3: \"Wednesday\",\n    4: \"Thursday\",\n    5: \"Friday\",\n    6: \"Saturday\",\n};\n/* eslint-disable id-length */\n/**\n * Reference to months of a year, zero indexed\n *\n * @private\n * @type {Object<number, string>}\n * @static\n */\nDatePlus._keysReference = {\n    y: \"year\",\n    m: \"month\",\n    d: \"day\",\n};\n/* eslint-enable id-length */\n/**\n * Reference to months of a year, zero indexed\n *\n * @private\n * @type {Object<number, string>}\n * @static\n */\nDatePlus._monthsReference = {\n    0: \"January\",\n    1: \"Feburary\",\n    2: \"March\",\n    3: \"April\",\n    4: \"May\",\n    5: \"June\",\n    6: \"July\",\n    7: \"August\",\n    8: \"September\",\n    9: \"October\",\n    10: \"November\",\n    11: \"December\",\n};\n/**\n * Add's 0s to date (e.g 2020/4/3 => 2020/04/03)\n *\n * @param {string} date - String date to format\n * @param {string} seperator - Char the date is seperatred by\n * @returns {string} - Date with zeros\n * @public\n * @static\n */\nDatePlus.addZeros = (date, seperator = \"/\") => {\n    let newDate = \"\";\n    for (let index = 0; index < 2; index++) {\n        if (date.split(seperator)[index].length < 2) {\n            newDate += `0${date.split(seperator)[index]}${seperator}`;\n        }\n        else {\n            newDate += `${date.split(seperator)[index]}${seperator}`;\n        }\n    }\n    if (date.split(seperator)[2].length < 2) {\n        newDate += `0${date.split(seperator)[2]}`;\n    }\n    else {\n        newDate += date.split(seperator)[2];\n    }\n    return newDate;\n};\n/**\n * Format date into a string in the form YYYY{seperator}MM{seperator}DD\n *\n * @param {Date | DatePlus} date - Date object to format\n * @param {string} seperator - String to seperate date values with\n * @returns {string} Formatted date\n * @public\n * @static\n */\nDatePlus.formatDate = (date, seperator = \"/\") => {\n    const month = date.getMonth().toString();\n    const day = date.getDate().toString();\n    const year = date.getFullYear().toString();\n    return [year, month, day].join(seperator);\n};\n/**\n * Gets date values and outputs an object\n *\n * @param {string} date - Date to extract values from, months zero indexed\n * @param {DateFormat} format - Format of string date\n * @param {string} seperator - Seperator the date works with; leave auto for auto detection,\n *   limited to 1 char\n * @returns {Object<string, number>} Object with all values\n * @public\n * @static\n */\nDatePlus.getDateValues = (date, format = \"y:m:d\", seperator = \"auto\") => {\n    let _seperator = \"/\";\n    if (seperator === \"auto\") {\n        for (const letter of date) {\n            if (isNaN(Number(letter))) {\n                _seperator = letter;\n                break;\n            }\n        }\n    }\n    else {\n        _seperator = seperator;\n    }\n    const dateData = date.split(_seperator);\n    const dateFormat = format.split(\":\");\n    const output = {};\n    for (let index = 0; index < 3; index++) {\n        const key = DatePlus._keysReference[dateFormat[index]];\n        output[key] = Number(dateData[index]);\n    }\n    return output;\n};\n/* eslint-disable max-len */\n/**\n * Converts numerical day of week into word form (e.g 0 => \"Sunday\")\n *\n * @param {number} numerical - Numerical day of week, 0 indexed (0-6)\n * @returns {string} Stringed day of week\n * @public\n * @static\n */\nDatePlus.getWordDay = (numerical) => DatePlus._daysReference[numerical];\n/**\n * Converts numerical month into word form (e.g 0 => \"January\")\n *\n * @param {number} numerical - Numerical day of week, 0 indexed (0-11)\n * @returns {string} Stringed worded month\n * @public\n * @static\n */\nDatePlus.getWordMonth = (numerical) => DatePlus._monthsReference[numerical];\nexport default DatePlus;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztHQVNHO0FBR0gsT0FBTyxLQUFLLE1BQU0sU0FBUyxDQUFBO0FBNkMzQixvQ0FBb0M7QUFFcEM7Ozs7OztHQU1HO0FBQ0gsTUFBTSxPQUFPLFFBQVMsU0FBUSxLQUFLO0lBQW5DOztRQXdLSTs7Ozs7OztXQU9HO1FBQ0ksYUFBUSxHQUFHLENBQUMsU0FBUyxHQUFHLEdBQUcsRUFBVSxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUE7UUFFOUY7Ozs7Ozs7V0FPRztRQUNJLGVBQVUsR0FBRyxDQUFDLFNBQVMsR0FBRyxHQUFHLEVBQVUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFBO1FBRXJGOzs7Ozs7V0FNRztRQUNJLGVBQVUsR0FBRyxHQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQWdCLENBQUMsQ0FBQTtRQUV0Rjs7Ozs7O1dBTUc7UUFDSSxpQkFBWSxHQUFHLEdBQVcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFrQixDQUFDLENBQUE7UUFDOUYsMkJBQTJCO0lBQy9CLENBQUM7O0FBN01HOzs7Ozs7R0FNRztBQUNZLHVCQUFjLEdBQVM7SUFDbEMsQ0FBQyxFQUFFLFFBQVE7SUFDWCxDQUFDLEVBQUUsUUFBUTtJQUNYLENBQUMsRUFBRSxTQUFTO0lBQ1osQ0FBQyxFQUFFLFdBQVc7SUFDZCxDQUFDLEVBQUUsVUFBVTtJQUNiLENBQUMsRUFBRSxRQUFRO0lBQ1gsQ0FBQyxFQUFFLFVBQVU7Q0FDaEIsQ0FBQTtBQUVELDhCQUE4QjtBQUM5Qjs7Ozs7O0dBTUc7QUFDWSx1QkFBYyxH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"],"names":[],"mappings":"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"}