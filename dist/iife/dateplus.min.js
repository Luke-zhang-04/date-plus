/**
 * DatePlus v4.0.0-beta1 | A simple program to assist with date manipulation
 *
 * @license MIT
 * @copyright Copyright (C) 2020 - 2021 Luke Zhang
 */
var DatePlus = (function (e) {
    "use strict"
    const t = (e) => ({ms: e % 1e3, seconds: (e - (e % 1e3)) / 1e3}),
        r = t,
        s = (e) => {
            const t = (e % 1e3) % 1e3,
                r = ((e - (e % 1e3)) / 1e3) % 60
            return {ms: t, seconds: r, minutes: (e - 1e3 * r - t) / 6e4}
        },
        a = s,
        n = (e) => {
            const t = (e % 1e3) % 1e3,
                r = ((e - (e % 1e3)) / 1e3) % 60,
                s = ((e - 1e3 * r - t) / 6e4) % 60
            return {ms: t, seconds: r, minutes: s, hours: (e - 1e3 * s * 60 - 1e3 * r - t) / 36e5}
        },
        u = n,
        o = (e) => {
            const t = (e % 1e3) % 1e3,
                r = ((e - (e % 1e3)) / 1e3) % 60,
                s = ((e - 1e3 * r - t) / 6e4) % 60,
                a = ((e - 1e3 * s * 60 - 1e3 * r - t) / 36e5) % 24
            return {
                ms: t,
                seconds: r,
                minutes: s,
                hours: a,
                days: (e - 1e3 * a * 60 * 60 - 1e3 * s * 60 - 1e3 * r - t) / 864e5,
            }
        },
        h = (e) => 1e3 * e,
        d = h,
        c = (e) => s(h(e)),
        i = c,
        y = (e) => n(h(e)),
        m = y,
        $ = (e) => o(h(e)),
        M = $,
        l = (e) => 60 * e * 1e3,
        g = $,
        b = (e) => 60 * e,
        D = b,
        f = (e) => n(l(e)),
        p = f,
        E = (e) => o(l(e)),
        N = E,
        P = (e) => 60 * e * 60 * 1e3,
        S = P,
        v = (e) => 60 * e * 60,
        J = v,
        W = (e) => 60 * e,
        A = W,
        F = (e) => o(P(e)),
        H = F,
        O = (e) => 24 * e * 60 * 60,
        T = O,
        _ = (e) => 24 * e * 60,
        j = _,
        k = (e) => 24 * e,
        w = k,
        x = {
            0: "Sunday",
            1: "Monday",
            2: "Tuesday",
            3: "Wednesday",
            4: "Thursday",
            5: "Friday",
            6: "Saturday",
        },
        Z = {
            0: "January",
            1: "Feburary",
            2: "March",
            3: "April",
            4: "May",
            5: "June",
            6: "July",
            7: "August",
            8: "September",
            9: "October",
            10: "November",
            11: "December",
        },
        q = 6e4,
        z = 36e5,
        B = 864e5,
        C = {y: "year", m: "month", d: "day"},
        G = (e, t = "/") => {
            let r = ""
            for (let s = 0; s < 2; s++)
                e.split(t)[s].length < 2
                    ? (r += `0${e.split(t)[s]}${t}`)
                    : (r += `${e.split(t)[s]}${t}`)
            return e.split(t)[2].length < 2 ? (r += `0${e.split(t)[2]}`) : (r += e.split(t)[2]), r
        },
        I = (e, t = "/") => {
            const r = e.getMonth().toString(),
                s = e.getDate().toString()
            return [e.getFullYear().toString(), r, s].join(t)
        },
        K = (e, t) => -1 * Math.round((e.getTime() - t.getTime()) / B),
        L = (e, t) => -1 * Math.round((e.getTime() - t.getTime()) / z),
        Q = (e, t) => -1 * Math.round((e.getTime() - t.getTime()) / q),
        R = (e, t) => -1 * Math.round((e.getTime() - t.getTime()) / 1e3),
        U = (e, t) => -1 * Math.round(e.getTime() - t.getTime()),
        V = (e, t, r = "about") => {
            const s = 30 * B,
                a = 365 * B,
                n = U(e, t)
            let u
            return n < q
                ? ((u = Math.round(n / 1e3)), `${u} second${1 === u ? "" : "s"} ago`)
                : n < z
                ? ((u = Math.round(n / q)), `${u} minute${1 === u ? "" : "s"} ago`)
                : n < B
                ? ((u = Math.round(n / z)), `${u} hour${1 === u ? "" : "s"} ago`)
                : n < s
                ? ((u = Math.round(n / B)), `${r} ${u} day${1 === u ? "" : "s"} ago`)
                : n < a
                ? ((u = Math.round(n / s)), `${r} ${u} month${1 === u ? "" : "s"} ago`)
                : ((u = Math.round(n / a)), `${r} ${u} year${1 === u ? "" : "s"} ago`)
        }
    class X extends Date {
        constructor() {
            super(...arguments), (this.getElapsedString = (e, t = "about") => V(this, e, t))
        }
        addZeros(e = "/") {
            return G(this.formatDate(), e)
        }
        formatDate(e = "/") {
            return I(this, e)
        }
        getWordDay() {
            return x[this.getDay()]
        }
        getWordMonth() {
            return Z[this.getMonth()]
        }
        getElapsedDays(e) {
            return K(this, e)
        }
        getElapsedHours(e) {
            return L(this, e)
        }
        getElapsedMinutes(e) {
            return Q(this, e)
        }
        getElapsedSeconds(e) {
            return R(this, e)
        }
        getElapsedMs(e) {
            return U(this, e)
        }
    }
    return (
        (e.DatePlus = X),
        (e.addZeros = G),
        (e.daysReference = x),
        (e.daysToHours = w),
        (e.daysToHrs = k),
        (e.daysToMins = _),
        (e.daysToMinutes = j),
        (e.daysToMs = (e) => 24 * e * 60 * 60 * 1e3),
        (e.daysToSeconds = T),
        (e.daysToSecs = O),
        (e.default = X),
        (e.formatDate = I),
        (e.getDateValues = (e, t = "y:m:d", r = "auto") => {
            let s = "/"
            if ("auto" === r) {
                for (const t of e)
                    if (isNaN(Number(t))) {
                        s = t
                        break
                    }
            } else s = r
            const a = e.split(s),
                n = t.split(":"),
                u = {}
            for (let e = 0; e < 3; e++) {
                u[C[n[e]]] = Number(a[e])
            }
            return u
        }),
        (e.getElapsedDays = K),
        (e.getElapsedHours = L),
        (e.getElapsedMinutes = Q),
        (e.getElapsedMs = U),
        (e.getElapsedSeconds = R),
        (e.getElapsedString = V),
        (e.getUtcTime = () => {
            const e = new Date()
            return Date.UTC(
                e.getUTCFullYear(),
                e.getUTCMonth(),
                e.getUTCDate(),
                e.getUTCHours(),
                e.getUTCMinutes(),
                e.getUTCSeconds(),
                e.getUTCMilliseconds(),
            )
        }),
        (e.getWordDay = (e) => x[e]),
        (e.getWordMonth = (e) => Z[e]),
        (e.hoursToDays = H),
        (e.hoursToMinutes = A),
        (e.hoursToMs = S),
        (e.hoursToSeconds = J),
        (e.hrsToDays = F),
        (e.hrsToMins = W),
        (e.hrsToMs = P),
        (e.hrsToSecs = v),
        (e.minsToDays = E),
        (e.minsToHrs = f),
        (e.minsToMs = l),
        (e.minsToSecs = b),
        (e.minutesToDays = N),
        (e.minutesToHours = p),
        (e.minutesToMs = g),
        (e.minutesToSeconds = D),
        (e.monthsReference = Z),
        (e.msToDays = o),
        (e.msToHours = u),
        (e.msToHrs = n),
        (e.msToMins = s),
        (e.msToMinutes = a),
        (e.msToSeconds = r),
        (e.msToSecs = t),
        (e.oneDay = B),
        (e.oneHour = z),
        (e.oneMinute = q),
        (e.secondsToDays = M),
        (e.secondsToHours = m),
        (e.secondsToMinutes = i),
        (e.secondsToMs = d),
        (e.secsToDays = $),
        (e.secsToHrs = y),
        (e.secsToMins = c),
        (e.secsToMs = h),
        (e.utcToLocal = (e) => {
            const t = e.constructor(e.getTime())
            return t.setMinutes(e.getMinutes() - e.getTimezoneOffset()), t
        }),
        (e.values = {hrsPerDay: 24, minsPerHr: 60, secsPerMin: 60, msPerSec: 1e3}),
        Object.defineProperty(e, "t", {value: !0}),
        e
    )
})({})
//# sourceMappingURL=dateplus.min.js.map
