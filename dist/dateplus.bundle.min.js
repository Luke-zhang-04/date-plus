"use strict";function _wrapNativeSuper(Class){var _cache=typeof Map==="function"?new Map:undefined;_wrapNativeSuper=function _wrapNativeSuper(Class){if(Class===null||!_isNativeFunction(Class))return Class;if(typeof Class!=="function"){throw new TypeError("Super expression must either be null or a function")}if(typeof _cache!=="undefined"){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper)}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor)}Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:false,writable:true,configurable:true}});return _setPrototypeOf(Wrapper,Class)};return _wrapNativeSuper(Class)}function _construct(Parent,args,Class){if(_isNativeReflectConstruct()){_construct=Reflect.construct}else{_construct=function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var Constructor=Function.bind.apply(Parent,a);var instance=new Constructor;if(Class)_setPrototypeOf(instance,Class.prototype);return instance}}return _construct.apply(null,arguments)}function _isNativeFunction(fn){return Function.toString.call(fn).indexOf("[native code]")!==-1}function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();normalCompletion=step.done;return step},e:function e(_e3){didErr=true;err=_e3},f:function f(){try{if(!normalCompletion&&it["return"]!=null)it["return"]()}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i]}return arr2}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function")}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o};return _setPrototypeOf(o,p)}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else{result=Super.apply(this,arguments)}return _possibleConstructorReturn(this,result)}}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)==="object"||typeof call==="function")){return call}return _assertThisInitialized(self)}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return self}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true}catch(e){return false}}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)};return _getPrototypeOf(o)}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj}}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj}}return _typeof(obj)}module.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==_typeof(e)&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e){r.d(n,o,function(t){return e[t]}.bind(null,o))}return n},r.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{"default":e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(r(1));var s=function(_o$default){_inherits(s,_o$default);var _super=_createSuper(s);function s(){var _this;_classCallCheck(this,s);_this=_super.apply(this,arguments),_this.addZeros=function(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"/";return s.addZeros(_this.formatDate(),e)},_this.formatDate=function(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"/";return s.formatDate(_assertThisInitialized(_this),e)},_this.getWordDay=function(){return s._daysReference[_this.getDay()]},_this.getWordMonth=function(){return s._monthsReference[_this.getMonth()]};return _this}return s}(o["default"]);t["default"]=s,s._daysReference={0:"Sunday",1:"Monday",2:"Tuesday",3:"Wednesday",4:"Thursday",5:"Friday",6:"Saturday"},s._keysReference={y:"year",m:"month",d:"day"},s._monthsReference={0:"January",1:"Feburary",2:"March",3:"April",4:"May",5:"June",6:"July",7:"August",8:"September",9:"October",10:"November",11:"December"},s.addZeros=function(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"/";var r="";for(var _n=0;_n<2;_n++){e.split(t)[_n].length<2?r+="0".concat(e.split(t)[_n]).concat(t):r+="".concat(e.split(t)[_n]).concat(t)}return e.split(t)[2].length<2?r+="0"+e.split(t)[2]:r+=e.split(t)[2],r},s.formatDate=function(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"/";var r=e.getMonth().toString(),n=e.getDate().toString();return[e.getFullYear().toString(),r,n].join(t)},s.getDateValues=function(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"y:m:d";var r=arguments.length>2&&arguments[2]!==undefined?arguments[2]:"auto";var n="/";if("auto"===r){var _iterator=_createForOfIteratorHelper(e),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _t=_step.value;if(isNaN(Number(_t))){n=_t;break}}}catch(err){_iterator.e(err)}finally{_iterator.f()}}else n=r;var o=e.split(n),u=t.split(":"),a={};for(var _e=0;_e<3;_e++){var _t2=s._keysReference[u[_e]];a[_t2]=Number(o[_e]),console.log(_t2,o[_e])}return a},s.getWordDay=function(e){return s._daysReference[e]},s.getWordMonth=function(e){return s._monthsReference[e]}},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{"default":e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(r(2));var s=function(_o$default2){_inherits(s,_o$default2);var _super2=_createSuper(s);function s(){var _this2;_classCallCheck(this,s);_this2=_super2.apply(this,arguments),_this2.getElapsedDays=function(e){return Math.round(Math.abs((_this2.getTime()-e.getTime())/s._oneDay))};return _this2}return s}(o["default"]);t["default"]=s,s._oneDay=864e5,s.getElapsedDays=function(e,t){return Math.round(Math.abs((e.getTime()-t.getTime())/s._oneDay))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(_Date){_inherits(n,_Date);var _super3=_createSuper(n);function n(){_classCallCheck(this,n);return _super3.apply(this,arguments)}return n}(_wrapNativeSuper(Date));t["default"]=n,n.msToSeconds=function(e){return{ms:e%1e3,seconds:(e-e%1e3)/1e3}},n.msToMinutes=function(e){var t=e%1e3%1e3,r=(e-e%1e3)/1e3%60;return{ms:t,seconds:r,minutes:(e-1e3*r-t)/6e4}},n.msToHours=function(e){var t=e%1e3%1e3,r=(e-e%1e3)/1e3%60,n=(e-1e3*r-t)/6e4%60;return{ms:t,seconds:r,minutes:n,hours:(e-1e3*n*60-1e3*r-t)/36e5}},n.msToDays=function(e){var t=e%1e3%1e3,r=(e-e%1e3)/1e3%60,n=(e-1e3*r-t)/6e4%60,o=(e-1e3*n*60-1e3*r-t)/36e5%24;return{ms:t,seconds:r,minutes:n,hours:o,days:(e-1e3*o*60*60-1e3*n*60-1e3*r-t)/864e5}},n.secsToMs=function(e){return 1e3*e}}]);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,